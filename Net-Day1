------------------------------------------------------------------------------------------------------------------------
COSC NETWORKING DAY 1 GENERAL LINKS
RECOMMENDED RESOURCE: MIRO WHITEBOARD: https://miro.com/app/board/o9J_klSqCSY=/
NETWORKING GUIDE: https://net.cybbh.io/public/networking/latest/index.html
CTFD-2: ( THE SERVER WE USE )
  URL: http://networking-ctfd-2.server.vta:8000/
  IP: http://10.50.23.147:8000/
Practice Server
  URL: http://networking-practice-ctfd.server.vta:8000/
  IP: http://10.50.21.30:8000/
STUDENT ANTORA: https://cctc.cybbh.io/students/students/latest/index.html
PUTTY DOWNLOAD: https://www.putty.org/
WSL2: https://docs.microsoft.com/en-us/windows/wsl/install-win10
XMING:
  DOWNLOAD: http://www.geo.mtu.edu/geoschem/docs/putty_install.html
  NOTES: http://www.straightrunning.com/XmingNotes/
PACKET CAPTURE LINKS:
  https://packetlife.net/captures/
  https://wiki.wireshark.org/SampleCaptures
  https://github.com/chrissanders/packets
  https://www.cloudshark.org/collections/_7QxUxkDFulYsJ_ZI_0xHg
LINUX FILE PERM INFO:https://onedrive.live.com/view.aspx?resid=2F6F542CFFBDFABC!28524&ithint=file%2cxlsx&authkey=!AA2N-oRQQLqoSGQ
------------------------------------------------------------------------------------------------------------------------
DAY 1 MODULE NOTES
CONSULT MODULE NETWORK MAP:
  -INTERACTION AND COMMS OCCUR ON BLUE SPACE FIRST
  -ENUMERATION OCCURS IN RED SPACE
TYPICALLY, DCO-IDM IS CONCERNED WITH OSI MODEL LAYERS 3 AND ABOVE AS LAYERS 1 AND 2 ARE MORE INFRASTRUCTURAL IN NATURE
------------------------------------------------------------------------------------------------------------------------
NETWORKING FUN(DAMENTALS) NOTES
RECALL BINARY BASICS (NUMBER LINE METHOD)
  DECIMAL VALUE... 8 4 2 1
  BINARY VALUE...  0 1 1 1
  THUS, BINARY 0111 = DECIMAL 7 
RECALL HEX BASICS (BASE 16, 0-15)
  DEC VALUE: 15
  HEX VALUE: F
BINARY IDENTIFICATION:
  1 bit...     1/8 a byte
  1 nibble...  4 bits OR half a byte
  1 byte...    8 bits
  half word... 16 bits OR 2 bytes
  word...      32 bits OR 4 bytes

OSI MODEL:
1-APPLICATION:  (DATA) PROTOCOL: HTTP, FTP, ETC ETC
2-PRESENTATION: (DATA) FILE EXTENSION/FORMAT 
3-SESSION:      (DATA) NAMED PIPE,NETBIOS,NET-BEUI,SOCKS,RPC,RTP,L2F,PPTP,L2TP
4-TRANSPORT:    (SEGMENT / DATAGRAM) TCP/UDP
5-NETWORK:      (PACKET) ROUTING PROTOCOLS: IPv4,IPv6,RIP,EIGRP,BGP,OSPF,IS-IS,ICMP,ICMPv6,IPSec
6-DATA LINK:    (FRAMES) LAN,MAN,WAN (NETWORK TYPE)
7-PHYSICAL      (BITS) HARDWARE TRANSMISSION
OSI MODEL WEB REQUEST EXAMPLE 
  Application Layer: A user requests their browser to download a file from a web site. The HTTP protocol handler at this layer recognizes the secure request for a file on the web server and passes the request to the TLS Library.
  Session and Presentation Layer: The TLS library needs to create a secure channel for communication which requires the establishment of a connection with the destination. It passes a connection request to TCP.
  Transport Layer: The TCP handler receives the connection requests and creates a segment with the SYN flag (first part of the three-way handshake) set to the distant end server. The upper layer data is encapsulated with a TCP header and the segment is passed down to IP at the network layer.
  Network Layer: The network layer receives the segment and creates a packet by encapsulating the TCP header and data payload in an IP header. The correct IP information is added to the header for the destination IP address. The packet is then passed down to the Data-Link layer.
  Data-Link Layer: The data-link layer creates a frame encapsulating the data payload, TCP header, and IP header. The destination MAC address of the router is added to send the frame to itâ€™s local destination. In addition to a header a trailer/footer is added containing a checksum and padding if needed to aid in frame synchronization. This is then passed to the physical layer.
  Physical Layer: The physical layer takes the binary data and injects it onto the physical media for which transmission is taking place (wireless or wired)

ETHERNET HEADER STRUCTURE:
  Preamble (7 BYTES)
    ALTERNATES 1 AND 0, TIME SYNC, NOT VISIBLE IN PACKET ANALYSIS
  SFD (START FRAME DELIMERTER) (1 BYTE)
    MARKS PREAMBLE END, START OF FRAME, NOT VISIBLE IN PACKET ANALYSIS
  MAC HEADER (12 BYTES)
    FIRST 6 BYTES (48 bits) = DESTINATION MAC 
    NEXT 6 BYTES (48 bits) = SOURCE MAC
    - ONLY TIME DEST ADDR BEFORE SOURCE TYPICALLY
  ETHERTYPE (2 BYTES)
    INDICATES NEXT PROTOCOL ENCAPSULATED, PROVIDER VIA LLC SUBLAYER.
    COMMON ETHERTYPES VIA IANA.org:
      0x0800 - IPv4
      0x0806 - ARP
      0x86DD - IPv6
      0x8100 - VLAN TAGGING 802.1q
  DATA / PAYLOAD (46-1500 BYTES)
    ACTUAL CONTENT
  FCS/CRC (FRAME CHECK SEQUENCE / CYCLICAL REDUNDANCY CHECK) (4 BYTES)
    QUALITY CHECK

802.1Q HEADER STRUCTURE:
 MAC HEADER (12 BYTES)
    FIRST 6 BYTES (48 bits) = DESTINATION MAC 
    NEXT 6 BYTES (48 bits) = SOURCE MAC
    - ONLY TIME DEST ADDR BEFORE SOURCE TYPICALLY
  VLAN TAG (4 BYTES)
    TAG PROTOCOL ID (2 BYTES)
      NEW EFFECTIVE ETHERTYPE
    TAG CONTROL (2 BYTES)
      PRIORITY CODE POINT (3 BITS)
      DROP ELIGIBLE INDICATOR (1 BIT)
    VLAN ID (12 BITS)
  ETHERTYPE (2 BYTES)
    INDICATES NEXT PROTOCOL ENCAPSULATED
  DATA / PAYLOAD (46-1500 BYTES)
    ACTUAL CONTENT
  FCS/CRC (FRAME CHECK SEQUENCE / CYCLICAL REDUNDANCY CHECK) (4 BYTES)
    QUALITY CHECK
------------------------------------------------------------------------------------------------------------------------
